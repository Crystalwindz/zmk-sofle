#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    time-to-max-speed-ms = <50>;       // 300                   // 0
};

&mmv { acceleration-exponent = <0>; };

&lt {
    flavor = "hold-preferred";
    tapping-term-ms = <500>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    behaviors {
    };

    keymap {
        compatible = "zmk,keymap";

        QWERTY {
            bindings = <
&kp GRAVE   &kp N1     &kp N2        &kp N3        &kp N4     &kp N5       &kp UP_ARROW     &kp N6     &kp N7     &kp N8         &kp N9         &kp N0     &kp BACKSPACE
&kp TAB     &kp Q      &kp W         &kp E         &kp R      &kp T        &kp DOWN_ARROW   &kp Y      &kp U      &kp I          &kp O          &kp P      &kp BSLH
&kp CAPS    &kp A      &kp S         &kp D         &kp F      &kp G        &kp LEFT_ARROW   &kp H      &kp J      &kp K          &kp L          &kp SEMI   &kp APOS
&kp LSHFT   &kp Z      &kp X         &kp C         &kp V      &kp B        &kp RIGHT_ARROW  &kp N      &kp M      &kp COMMA      &kp DOT        &kp FSLH   &kp RIGHT_SHIFT
&kp C_MUTE  &kp LCTRL  &kp LEFT_GUI  &kp LEFT_ALT  &kp SPACE  &lt 1 ESC    &kp ENTER        &lt 2 TAB  &kp ENTER  &kp BACKSPACE  &kp RIGHT_ALT  &kp RCTRL
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
        };

        NUMBER {
            bindings = <
&kp F1     &kp F2         &kp F3      &kp F4      &kp F5     &kp F6    &mmv MOVE_UP     &kp F7  &kp F8           &kp F9           &kp F10          &kp F11           &kp F12
&kp HOME   &kp PAGE_UP    &mkp RCLK   &kp UP      &mkp LCLK  &none     &mmv MOVE_DOWN   &none   &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp MINUS         &kp EQUAL
&kp END    &kp PAGE_DOWN  &kp LEFT    &kp DOWN    &kp RIGHT  &none     &mmv MOVE_LEFT   &none   &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&none      &none          &kp LC(X)   &kp LC(C)   &kp LC(V)  &none     &mmv MOVE_RIGHT  &none   &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &none             &none
&mkp MCLK  &none          &kp DELETE  &kp INSERT  &none      &none     &mkp LCLK        &none   &none            &kp KP_NUMBER_0  &kp KP_DOT       &none
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        CONTROL {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        SYSTEM {
            bindings = <
&none       &none       &none  &none                 &none              &none    &none  &none  &none           &none             &none       &none  &none
&bt BT_PRV  &bt BT_NXT  &none  &kp C_BRIGHTNESS_INC  &kp C_VOLUME_UP    &none    &none  &none  &none           &none             &none       &none  &none
&none       &none       &none  &kp C_BRIGHTNESS_DEC  &kp C_VOLUME_DOWN  &none    &none  &none  &kp C_PREVIOUS  &kp C_PLAY_PAUSE  &kp C_NEXT  &none  &none
&none       &none       &none  &none                 &kp C_MUTE         &none    &none  &none  &none           &none             &none       &none  &none
&none       &none       &none  &none                 &none              &none    &none  &none  &none           &none             &none       &none
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        N_C_TO_S {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
