#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    time-to-max-speed-ms = <50>;       // 300                   // 0
};

&mmv { acceleration-exponent = <0>; };

&lt { flavor = "hold-preferred"; };

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    behaviors {
        as_ht: autoshift_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "AUTOSHIFT_HOLD_TAP";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            bindings = <&shifted>, <&kp>;

            flavor = "tap-preferred";
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_minus {
            bindings = <&kp MINUS>;
            key-positions = <4 5>;
            layers = <0>;
        };

        combo_underscore {
            bindings = <&kp RS(MINUS)>;
            key-positions = <7 8>;
            layers = <0>;
        };

        combo_big_l_bracket {
            bindings = <&kp LS(LEFT_BRACKET)>;
            key-positions = <17 18>;
            layers = <0>;
        };

        combo_big_r_bracket {
            bindings = <&kp RS(RIGHT_BRACKET)>;
            key-positions = <20 21>;
            layers = <0>;
        };

        combo_mid_l_bracket {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <30 31>;
            layers = <0>;
        };

        combo_mid_r_bracket {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <33 34>;
            layers = <0>;
        };

        combo_small_l_bracket {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <43 44>;
            layers = <0>;
        };

        combo_small_r_bracket {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <46 47>;
            layers = <0>;
        };
    };

    macros {
        shifted: macro_shifted_kp {
            #binding-cells = <1>;
            label = "MACRO_SHIFTED_KP";
            compatible = "zmk,behavior-macro-one-param";
            bindings =
                <&macro_press>,
                <&kp LSHFT &macro_param_1to1>,
                <&macro_tap>,
                <&kp MACRO_PLACEHOLDER>,
                <&macro_release>,
                <&kp LSHFT>;
        };

        as: autoshift {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            label = "AUTOSHIFT_KP";
            bindings =
                <&macro_press>,
                <&macro_param_1to1 &macro_param_1to2 &as_ht MACRO_PLACEHOLDER MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&macro_param_1to1 &macro_param_1to2 &as_ht MACRO_PLACEHOLDER MACRO_PLACEHOLDER>;
        };

        enter_pwd: enter_pwd {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(M) &kp I &kp K &kp U &kp N2 &kp N2 &kp N2 &kp TILDE>;
            label = "ENTER_PWD";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        QWERTY {
            bindings = <
&as GRAVE   &as N1     &as N2        &as N3        &as N4     &as N5       &kp UP_ARROW     &as N6     &as N7     &as N8         &as N9         &as N0     &kp BACKSPACE
&kp TAB     &kp Q      &kp W         &kp E         &kp R      &kp T        &kp DOWN_ARROW   &kp Y      &kp U      &kp I          &kp O          &kp P      &kp EQUAL
&kp CAPS    &kp A      &kp S         &kp D         &kp F      &kp G        &kp LEFT_ARROW   &kp H      &kp J      &kp K          &kp L          &kp SEMI   &kp APOS
&kp LSHFT   &kp Z      &kp X         &kp C         &kp V      &kp B        &kp RIGHT_ARROW  &kp N      &kp M      &kp COMMA      &kp DOT        &kp FSLH   &kp RIGHT_SHIFT
&kp C_MUTE  &kp LCTRL  &kp LEFT_GUI  &kp LEFT_ALT  &kp SPACE  &lt 1 ESC    &kp ENTER        &lt 2 TAB  &kp ENTER  &kp BACKSPACE  &kp RIGHT_ALT  &kp RCTRL
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "QWERTY";
        };

        NUMBER {
            bindings = <
&kp F1     &kp F2         &kp F3      &kp F4      &kp F5     &kp F6    &mmv MOVE_UP     &kp F7  &kp F8           &kp F9           &kp F10          &kp F11           &kp F12
&kp HOME   &kp PAGE_UP    &mkp RCLK   &kp UP      &mkp LCLK  &none     &mmv MOVE_DOWN   &none   &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp MINUS         &kp BACKSLASH
&kp END    &kp PAGE_DOWN  &kp LEFT    &kp DOWN    &kp RIGHT  &none     &mmv MOVE_LEFT   &none   &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&kp LSHFT  &none          &kp LC(X)   &kp LC(C)   &kp LC(V)  &none     &mmv MOVE_RIGHT  &none   &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &none             &kp RSHFT
&mkp MCLK  &none          &kp DELETE  &kp INSERT  &none      &trans    &mkp LCLK        &trans  &none            &kp KP_NUMBER_0  &kp KP_DOT       &none
            >;

            sensor-bindings = <&scroll_encoder>;
            display-name = "NUMBER";
        };

        CONTROL {
            display-name = "CONTROL";
            bindings = <
&kp F1     &kp F2         &kp F3      &kp F4      &kp F5     &kp F6    &mmv MOVE_UP     &kp F7  &kp F8           &kp F9           &kp F10          &kp F11           &kp F12
&kp HOME   &kp PAGE_UP    &mkp RCLK   &kp UP      &mkp LCLK  &none     &mmv MOVE_DOWN   &none   &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp MINUS         &kp BACKSLASH
&kp END    &kp PAGE_DOWN  &kp LEFT    &kp DOWN    &kp RIGHT  &none     &mmv MOVE_LEFT   &none   &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&kp LSHFT  &none          &kp LC(X)   &kp LC(C)   &kp LC(V)  &none     &mmv MOVE_RIGHT  &none   &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &none             &kp RSHFT
&mkp MCLK  &none          &kp DELETE  &kp INSERT  &none      &trans    &mkp LCLK        &trans  &none            &kp KP_NUMBER_0  &kp KP_DOT       &none
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        SYSTEM {
            bindings = <
&none       &none       &none  &none                 &none              &none    &none  &none  &none           &none             &none       &none  &enter_pwd
&bt BT_PRV  &bt BT_NXT  &none  &kp C_BRIGHTNESS_INC  &kp C_VOLUME_UP    &none    &none  &none  &none           &none             &none       &none  &none
&none       &none       &none  &kp C_BRIGHTNESS_DEC  &kp C_VOLUME_DOWN  &none    &none  &none  &kp C_PREVIOUS  &kp C_PLAY_PAUSE  &kp C_NEXT  &none  &none
&none       &none       &none  &none                 &kp C_MUTE         &none    &none  &none  &none           &none             &none       &none  &none
&none       &none       &none  &none                 &none              &none    &none  &none  &none           &none             &none       &none
            >;

            display-name = "SYSTEM";
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        cond_mo_1_2_to_3 {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
